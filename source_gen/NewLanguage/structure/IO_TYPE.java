package NewLanguage.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum IO_TYPE {
  analog("analog", true),
  digital("digital", false);

  private String myName;
  public String getName() {
    return this.myName;
  }
  public String getValueAsString() {
    return "" + this.myValue;
  }
  public static List<IO_TYPE> getConstants() {
    List<IO_TYPE> list = ListSequence.fromList(new LinkedList<IO_TYPE>());
    ListSequence.fromList(list).addElement(IO_TYPE.analog);
    ListSequence.fromList(list).addElement(IO_TYPE.digital);
    return list;
  }
  public static IO_TYPE getDefault() {
    return null;
  }
  public static IO_TYPE parseValue(String value) {
    if (value == null) {
      return IO_TYPE.getDefault();
    }
    if (value.equals(IO_TYPE.analog.getValueAsString())) {
      return IO_TYPE.analog;
    }
    if (value.equals(IO_TYPE.digital.getValueAsString())) {
      return IO_TYPE.digital;
    }
    return IO_TYPE.getDefault();
  }
  private boolean myValue;
  IO_TYPE(String name, boolean value) {
    this.myName = name;
    this.myValue = value;
  }
  public boolean getValue() {
    return this.myValue;
  }
}
